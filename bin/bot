#!/usr/bin/env ruby
require 'bundler/setup'
require 'thor'
require 'daemons'
require 'redis'
require_relative '../lib/snap'

class Bot < Thor
  desc 'start', 'Starts the bot'
  method_option :daemonize, :aliases => '-d', :default => false, :type => :boolean
  method_option :server, :aliases => '-s', :default => 'irc.freenode.net', :type => :string
  method_option :channels, :aliases => '-c', :type => :array
  method_option :nick, :aliases => '-n', :required => true, :type => :string
  method_option :username, :aliases => '-u', :type => :string
  method_option :password, :aliases => '-p', :type => :string
  method_option :redis_host, :type => :string, :default => 'localhost'
  method_option :redis_port, :type => :numeric, :default => 6379
  def start
    if options[:daemonize]
      Daemons.daemonize#('/var/log/irc-bot.log')
      File.open('/tmp/irc-bot.pid', 'w') { |f| f.puts(Process.pid) }
    end

    bot = Snap::Bot.new(options)
    bot.redis = Redis.new(:host => options[:redis_host], :port => options[:redis_port])
    auth = File.join(File.dirname(__FILE__), 'config', 'auth.yml')

    if File.exist?(auth)
      bot.admins = YAML::load_file(auth)['admins']
    end

    bot.start
  end

  desc 'stop', 'Used to stop a daemonized bot'
  def stop
    %x(cat /tmp/irc-bot.pid | xargs kill)
  end
end

Bot.start
